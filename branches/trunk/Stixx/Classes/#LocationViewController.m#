//
//  LocationViewController.m
//  Stixx
//
//  Created by Bobby Ren on 12/3/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import <CoreLocation/CoreLocation.h>
#import "LocationViewController.h"
#import "FourSquareLocator.h"

#define HEADER_HEIGHT 75


@implementation LocationViewController
@synthesize delegate;
@synthesize locationInput, locationSearch;
@synthesize headerView;
@synthesize activityIndicator;

- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:style];
    if (self) {
        // Custom initialization
        fsl = [[FourSquareLocator alloc] init];
        [fsl setDelegate:self];
        
        activityIndicator = nil;
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];

    fsLocationStrings = [[NSMutableArray alloc] init];
    [fsl query:@""];

    // Uncomment the following line to preserve selection between presentations.
    self.clearsSelectionOnViewWillAppear = NO;
 
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    self.navigationItem.rightBarButtonItem = self.editButtonItem;    
    
    locationInput = [[UITextField alloc] initWithFrame:CGRectMake(10,5,300,30)];
    [locationInput setBorderStyle:UITextBorderStyleRoundedRect];
    [locationInput setDelegate:self];
    [locationInput setEnablesReturnKeyAutomatically:YES];
    [locationInput setClearsOnBeginEditing:YES];
    locationSearch = [[UITextField alloc] initWithFrame:CGRectMake(10,40,300,30)];
    [locationSearch setBorderStyle:UITextBorderStyleRoundedRect];
    [locationSearch setDelegate:self];
    [locationSearch setEnablesReturnKeyAutomatically:YES];
    [locationSearch setClearsOnBeginEditing:YES];
    
    headerView = [[UIView alloc] initWithFrame:CGRectMake(0,0,300,HEADER_HEIGHT)];
    //[headerView addSubview:[[[UIImageView alloc] initWithImage:[UIImage imageNamed:@"textured_background.png"]] autorelease]];
    [locationInput setText:@"Enter a location without GPS"];
    [locationInput addTarget:self action:@selector(didSelectLocationStringFromHeader) 
            forControlEvents:UIControlEventEditingDidEnd];
    [headerView addSubview:locationInput];
    [locationSearch setText:@"Enter a location term to search - UNDER CONSTRUCTION"];
    [locationSearch addTarget:self action:@selector(didEnterSearch) forControlEvents:UIControlEventEditingDidEnd];
    [headerView addSubview:locationSearch];
    
    if (activityIndicator == nil)
        activityIndicator = [[LoadingAnimationView alloc] initWithFrame:CGRectMake(120, 140, 80, 80)];
    [self.view addSubview:activityIndicator];
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
    [locationInput release];
    locationInput = nil;
    [locationSearch release];
    locationSearch = nil;
    [headerView release];
    headerView = nil;
    [fsLocationStrings removeAllObjects];
    [fsLocationStrings release];
    fsLocationStrings = nil;
    
    [fsl release];
    fsl = nil;
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [activityIndicator startCompleteAnimation];
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
}

- (void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    return [fsLocationStrings count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
    }
    
    // Configure the cell...
    NSString * fsLocationStr = [fsLocationStrings objectAtIndex:[indexPath row]];    
#if 0
     UIButton * button = [[UIButton alloc] init];
    [button setTitle: fsLocationStr forState:UIControlStateNormal];
    [button setFrame:CGRectMake(0, 0, cell.frame.size.width, cell.frame.size.height)];
    [cell addSubview:button];
#else
    [cell setBackgroundView:[[[UIImageView alloc] initWithImage:[UIImage imageNamed:@"nav_bar.png"]] autorelease]];
    [[cell textLabel] setText:fsLocationStr];
#endif
    return cell;
}

/*
// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Return NO if you do not want the specified item to be editable.
    return YES;
}
*/

/*
// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source
xc        [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
    }   
    else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
    }   
}
*/

/*
// Override to support rearranging the table view.
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath
{
}
*/

/*
// Override to support conditional rearranging of the table view.
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Return NO if you do not want the item to be re-orderable.
    return YES;
}
*/

-(void)didEnterSearch {
    NSString * text = [locationSearch text];
    [self getFoursquareVenues:text];
}

-(void)getFoursquareVenues:(NSString*)text
{
    // first clear locations
    [fsLocationStrings removeAllObjects];
    [self.tableView reloadData];
    
    // search for given query
    [fsl query:text];
    [activityIndicator startCompleteAnimation];
    
}

-(void)receiveVenueNames:(NSArray *)venueNames
{
    [activityIndicator stopCompleteAnimation];
    [fsLocationStrings addObjectsFromArray:venueNames];
    [self.tableView reloadData];
}

-(void)didReceiveConnectionError {
    // populate with a message that says "No internet connection" and allow entering text
    UIAlertView* alert = [[UIAlertView alloc]init];
    [alert addButtonWithTitle:@"Ok"];
    [alert setTitle:@"Location error!"];
    [alert setMessage:@"Could not connect to location server!"];
    [alert show];
    [alert release];
    [self dismissModalViewControllerAnimated:YES];
}

#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Navigation logic may go here. Create and push another view controller.
    /*
     <#DetailViewController#> *detailViewController = [[<#DetailViewController#> alloc] initWithNibName:@"<#Nib name#>" bundle:nil];
     // ...
     // Pass the selected object to the new view controller.
     [self.navigationController pushViewController:detailViewController animated:YES];
     [detailViewController release];
     */
    
    [self didSelectLocationStringFromTableRow:indexPath];
}

- (UIView *)tableView:(UITableView *)tv viewForHeaderInSection:(NSInteger) sec
{ 
    // header view will have the non-gps option
    return headerView;
}
- (CGFloat)tableView:(UITableView *)tv heightForHeaderInSection:(NSInteger)sec
{
    return HEADER_HEIGHT;
}

-(void)didSelectLocationStringFromHeader {
    NSLog(@"Location string selected: %@", [locationInput text]);
    [self dismissModalViewControllerAnimated:YES];
    [self.delegate didChooseLocation:[locationInput text]];
}
-(void)didSelectLocationStringFromTableRow:(NSIndexPath *)indexPath {
    NSString * locationString = [fsLocationStrings objectAtIndex:[indexPath row]];
    NSLog(@"Location string selected: %@", locationString);
    
    [self dismissModalViewControllerAnimated:YES];
    [self.delegate didChooseLocation:locationString];
}

/*** UITextFieldDelegate ****/
- (BOOL)textFieldShouldReturn:(UITextField *)textField{
	[textField resignFirstResponder];
	//NSLog(@"Comment entered: %@", [textField text]); 
	return YES;
}
@end
